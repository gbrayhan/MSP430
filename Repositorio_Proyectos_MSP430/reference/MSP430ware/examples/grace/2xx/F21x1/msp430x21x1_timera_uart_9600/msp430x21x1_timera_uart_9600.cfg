/**
 *  @fileOverview Grace
 */
/* need to use the CSL module to generate the CSL code */
var CSL = xdc.useModule('ti.mcu.msp430.csl.CSL');
var Timer_A3 = xdc.useModule('ti.mcu.msp430.csl.timer.Timer_A3');
CSL.configApiVersion = "1.00.00";

/* these modules should be part of every project */
var WDTplus = xdc.useModule('ti.mcu.msp430.csl.watchdog.WDTplus');
var GPIO = xdc.useModule('ti.mcu.msp430.csl.gpio.GPIO');
var BCSplus = xdc.useModule('ti.mcu.msp430.csl.clock.BCSplus');
var SYSTEM = xdc.useModule('ti.mcu.msp430.csl.system.System');

/* set stack and heap sizes as appropriate for MSP430 */
Program.sysStack = 0;
Program.stack = 64;
Program.heap = 0;
Program.argSize = 0;
GPIO.regs.P1DIR.Bit1 = GPIO.defs.BIT1;
GPIO.regs.P1SEL.Bit1 = GPIO.defs.BIT1;
GPIO.regs.P2SEL.Bit6 = GPIO.defs.BIT6_OFF;
GPIO.regs.P2SEL.Bit7 = GPIO.defs.BIT7_OFF;
GPIO.regs.P2SEL.Bit2 = GPIO.defs.BIT2;
GPIO.regs.P1DIR.Bit3 = GPIO.defs.BIT3;
GPIO.regs.P1OUT.Bit3 = GPIO.defs.BIT3;
Timer_A3.regs.TACTL.TASSEL = Timer_A3.defs.TASSEL_2;
Timer_A3.inputClockToTimer = 1000.0;
Timer_A3.regs.TACTL.MC = Timer_A3.defs.MC_2;
Timer_A3.regs.TACTL.TACLR = Timer_A3.defs.TACLR;
Timer_A3.regs.TACCTL0.OUT = Timer_A3.defs.OUT;
Timer_A3.ccr0TimerSelection_BasicView = xdc.module("ti.mcu.msp430.csl.timer.ITimer").CCR0TimerSelection_BasicView_Selection_0;
Timer_A3.regs.TACTL.TAIE = Timer_A3.defs.TAIE_OFF;
Timer_A3.regs.TACCTL0.CCIE = Timer_A3.defs.CCIE;
Timer_A3.ccr0InterruptHandler = "Timer_A";
Timer_A3.ccr0OperatingModeOnExit = xdc.module("ti.mcu.msp430.csl.timer.ITimer").MANUAL;
