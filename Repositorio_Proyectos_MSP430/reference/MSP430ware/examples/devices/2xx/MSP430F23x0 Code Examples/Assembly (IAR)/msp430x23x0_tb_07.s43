;*******************************************************************************
;   MSP430F23x0 Demo - Timer_B, Toggle P4.0-2, Cont. Mode ISR, DCO SMCLK
;
;   Description: Use Timer_B CCRx units and overflow to generate four
;   independent timing intervals. For demonstration, TBCCR0-2 output
;   units are optionally selected with P4.0-2 respectively in toggle
;   mode. As such, these pins will toggle when respective TBCCRx registers
;   match the TBR counter. Interrupts are also enabled with all TBCCRx units,
;   software only adds offset to next interval - as long as the interval
;   offset is aded to TBCCRx, toggle rate is generated in hardware. Timer_B
;   overflow is used to toggle P1.0 with software. Proper use of the TBIV
;   interrupt vector generator is demonstrated.
;   MCLK = SMCLK = TBCLK = DCO ~1.2MHz
;
;   As coded with TBCLK ~1.2MHz DCO, toggle rates are:
;   P4.0 = TBCCR0 = 1200000/(2*200) = 3000Hz
;   P4.1 = TBCCR1 = 1200000/(2*400) = 1500Hz
;   P4.2 = TBCCR2 = 1200000/(2*600) = 1000Hz
;   P1.0 = overflow = 1200000/(2*65536) = 9Hz
;
;                MSP430F23x0
;             -----------------
;         /|\|              XIN|-
;          | |                 |
;          --|RST          XOUT|-
;            |                 |
;            |         P4.0/TB0|--> TBCCR0
;            |         P4.1/TB1|--> TBCCR1
;            |         P4.2/TB2|--> TBCCR2
;            |             P1.0|--> Overflow/software
;
;   A. Dannenberg
;   Texas Instruments Inc.
;   January 2007
;   Built with IAR Embedded Workbench Version: 3.41A
;*******************************************************************************
#include "msp430x23x0.h"
;-------------------------------------------------------------------------------
            RSEG    CSTACK                  ; Define stack segment
;-------------------------------------------------------------------------------
            RSEG    CODE                    ; Assemble to Flash memory
;-------------------------------------------------------------------------------
RESET       mov.w   #SFE(CSTACK),SP         ; Initialize stackpointer
StopWDT     mov.w   #WDTPW+WDTHOLD,&WDTCTL  ; Stop WDT
SetupP4     bis.b   #07h,&P4SEL             ; P4.x - P4.2 option select
            bis.b   #07h,&P4DIR             ; P4.x = outputs
SetupP1     bis.b   #001h,&P1DIR            ; P1.0 = output
SetupCx     mov.w   #OUTMOD_4+CCIE,&TBCCTL0 ; TBCCR0 interrupt enabled
            mov.w   #OUTMOD_4+CCIE,&TBCCTL1 ; TBCCR1 interrupt enabled
            mov.w   #OUTMOD_4+CCIE,&TBCCTL2 ; TBCCR2 interrupt enabled
SetupTB     mov.w   #TBSSEL_2+MC_2+TBIE,&TBCTL   ; SMCLK, contmode, interrupt
                                            ;
Mainloop    bis.w   #CPUOFF+GIE,SR          ; CPU off, interrupts enabled
            nop                             ; Required for debugger
                                            ;
;-------------------------------------------------------------------------------
TB0_ISR;    ISR for TBCCR0
;-------------------------------------------------------------------------------
            add.w   #200,&TBCCR0            ; Offset until next interrupt
            reti                            ;
                                            ;
;-------------------------------------------------------------------------------
TBX_ISR;    Common ISR for TBCCR1-2 and overflow
;-------------------------------------------------------------------------------
            add.w   &TBIV,PC                ; Add Timer_B offset vector
            reti                            ;
            jmp     TBCCR1_ISR              ; TBCCR1
            jmp     TBCCR2_ISR              ; TBCCR2
            nop                             ;
            nop                             ;
            nop                             ;
            nop                             ;
TB_over     xor.b   #001h,&P1OUT            ; Toggle P1.0
            reti                            ; Return from overflow ISR
                                            ;
TBCCR1_ISR  add.w   #400,&TBCCR1            ; Offset until next interrupt
            jmp     TBX_ISR                 ;
                                            ;
TBCCR2_ISR  add.w   #600,&TBCCR2            ; Offset until next interrupt
            jmp     TBX_ISR                 ;
                                            ;
;-------------------------------------------------------------------------------
            COMMON  INTVEC                  ; Interrupt Vectors
;-------------------------------------------------------------------------------
            ORG     RESET_VECTOR            ; MSP430 RESET Vector
            DW      RESET                   ;
            ORG     TIMERB0_VECTOR          ; Timer_B0 Vector
            DW      TB0_ISR                 ;
            ORG     TIMERB1_VECTOR          ; Timer_BX Vector
            DW      TBX_ISR                 ;
            END
