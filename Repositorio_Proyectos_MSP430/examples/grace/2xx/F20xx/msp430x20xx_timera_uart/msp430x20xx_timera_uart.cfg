/**
 *  @fileOverview Grace
 */
/* need to use the CSL module to generate the CSL code */
var CSL = xdc.useModule('ti.mcu.msp430.csl.CSL');
var Timer_A2 = xdc.useModule('ti.mcu.msp430.csl.timer.Timer_A2');
CSL.configApiVersion = "1.00.00";

/* these modules should be part of every project */
var WDTplus = xdc.useModule('ti.mcu.msp430.csl.watchdog.WDTplus');
var GPIO = xdc.useModule('ti.mcu.msp430.csl.gpio.GPIO');
var BCSplus = xdc.useModule('ti.mcu.msp430.csl.clock.BCSplus');
var SYSTEM = xdc.useModule('ti.mcu.msp430.csl.system.System');

/* set stack and heap sizes as appropriate for MSP430 */
Program.sysStack = 0;
Program.stack = 64;
Program.heap = 0;
Program.argSize = 0;
GPIO.regs.P1DIR.Bit5 = GPIO.defs.BIT5_OFF;
GPIO.regs.P1SEL.Bit5 = GPIO.defs.BIT5_OFF;
GPIO.regs.P1SEL.Bit1 = GPIO.defs.BIT1;
Timer_A2.regs.TACTL.TASSEL = Timer_A2.defs.TASSEL_2;
Timer_A2.inputClockToTimer = 12.0;
Timer_A2.regs.TACTL.MC = Timer_A2.defs.MC_2;
Timer_A2.regs.TACCTL0.OUT = Timer_A2.defs.OUT;
Timer_A2.regs.TACCTL1.SCS = Timer_A2.defs.SCS;
Timer_A2.ccrXTimerSelection_PowerUser[1] = xdc.module("ti.mcu.msp430.csl.timer.ITimer").CCRxTimerSelection_PowerUser_Selection_2;
Timer_A2.ccrXTimerSelection_BasicView[1] = xdc.module("ti.mcu.msp430.csl.timer.ITimer").CCRxTimerSelection_BasicView_Selection_2;
Timer_A2.regs.TACCTL1.CAP = Timer_A2.defs.CAP;
Timer_A2.regs.TACCR1 = 0;
Timer_A2.regs.TACCTL1.CM = Timer_A2.defs.CM_2;
Timer_A2.regs.TACCTL1.CCIE = Timer_A2.defs.CCIE;
Timer_A2.ccr1InterruptHandler = "Timer_A1_ISR";
Timer_A2.regs.TACCTL0.CCIE = Timer_A2.defs.CCIE;
Timer_A2.ccr0InterruptHandler = "Timer_A0_ISR";
Timer_A2.ccr0OperatingModeOnExit = xdc.module("ti.mcu.msp430.csl.timer.ITimer").KEEP;
Timer_A2.ccr1OperatingModeOnExit = xdc.module("ti.mcu.msp430.csl.timer.ITimer").MANUAL;
GPIO.regs.P1DIR.Bit2 = GPIO.defs.BIT2_OFF;
GPIO.regs.P1SEL.Bit2 = GPIO.defs.BIT2;
GPIO.regs.P1DIR.Bit1 = GPIO.defs.BIT1;
Timer_A2.ccInputPin[1] = 1;
