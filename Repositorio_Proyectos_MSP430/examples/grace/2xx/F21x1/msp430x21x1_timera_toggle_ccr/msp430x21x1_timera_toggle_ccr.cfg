/**
 *  @fileOverview Grace
 */
/* need to use the CSL module to generate the CSL code */
var CSL = xdc.useModule('ti.mcu.msp430.csl.CSL');
var Timer_A3 = xdc.useModule('ti.mcu.msp430.csl.timer.Timer_A3');
CSL.configApiVersion = "1.00.00";

/* these modules should be part of every project */
var WDTplus = xdc.useModule('ti.mcu.msp430.csl.watchdog.WDTplus');
var GPIO = xdc.useModule('ti.mcu.msp430.csl.gpio.GPIO');
var BCSplus = xdc.useModule('ti.mcu.msp430.csl.clock.BCSplus');
var SYSTEM = xdc.useModule('ti.mcu.msp430.csl.system.System');

/* set stack and heap sizes as appropriate for MSP430 */
Program.sysStack = 0;
Program.stack = 64;
Program.heap = 0;
Program.argSize = 0;
GPIO.regs.P1DIR.Bit3 = GPIO.defs.BIT3;
GPIO.regs.P1DIR.Bit2 = GPIO.defs.BIT2;
GPIO.regs.P1DIR.Bit1 = GPIO.defs.BIT1;
GPIO.regs.P1DIR.Bit0 = GPIO.defs.BIT0;
GPIO.regs.P1SEL.Bit3 = GPIO.defs.BIT3;
GPIO.regs.P1SEL.Bit2 = GPIO.defs.BIT2;
GPIO.regs.P1SEL.Bit1 = GPIO.defs.BIT1;
Timer_A3.regs.TACTL.TASSEL = Timer_A3.defs.TASSEL_2;
Timer_A3.inputClockToTimer = 1000.0;
Timer_A3.regs.TACTL.MC = Timer_A3.defs.MC_2;
Timer_A3.regs.TACTL.TAIE = Timer_A3.defs.TAIE;
Timer_A3.ctrOverflowInterruptHandler = "Timer_A1";
Timer_A3.ccr0InterruptHandler = "Timer_A0";
Timer_A3.regs.TACCTL0.CCIE = Timer_A3.defs.CCIE;
Timer_A3.regs.TACCTL1.CCIE = Timer_A3.defs.CCIE;
Timer_A3.ccr1InterruptHandler = "Timer_A1";
Timer_A3.regs.TACCTL2.OUTMOD = Timer_A3.defs.OUTMOD_4;
Timer_A3.regs.TACCTL2.CCIE = Timer_A3.defs.CCIE;
Timer_A3.ccr2InterruptHandler = "Timer_A1";
Timer_A3.regs.TACCTL1.OUTMOD = Timer_A3.defs.OUTMOD_4;
Timer_A3.regs.TACCTL0.OUTMOD = Timer_A3.defs.OUTMOD_4;
